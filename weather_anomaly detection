import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import zscore

# Load the data
file_path = 'file.csv'
df = pd.read_csv(file_path, encoding='ascii')

# Convert 'Date/Time' to datetime
df['Date/Time'] = pd.to_datetime(df['Date/Time'], format='%m/%d/%Y %H:%M')

# Display the first few rows
print(df.head())

# Check for missing values
print(df.isnull().sum())

# Select relevant columns for anomaly detection
relevant_columns = ['Temp_C', 'Press_kPa']

# Calculate z-scores
z_scores = df[relevant_columns].apply(zscore)

# Set anomaly threshold
threshold = 3

# Identify anomalies
anomalies = (np.abs(z_scores) > threshold)

# Add anomaly flags to the DataFrame
for col in relevant_columns:
    df[col + '_anomaly'] = anomalies[col]

    # Plot anomalies
plt.figure(figsize=(15, 6))
for i, col in enumerate(relevant_columns):
    plt.subplot(1, 2, i + 1)
    plt.plot(df['Date/Time'], df[col], label=col, color='blue')
    plt.scatter(df['Date/Time'][df[col + '_anomaly']], df[col][df[col + '_anomaly']], color='red', label='Anomaly')
    plt.xlabel('Date/Time')
    plt.ylabel(col)
    plt.title(f'Anomaly Detection in {col}')
    plt.legend()

plt.tight_layout()
plt.show()

# Print summary of anomalies
for col in relevant_columns:
    print(f"Number of anomalies in {col}: {df[col + '_anomaly'].sum()}")